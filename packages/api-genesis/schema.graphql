schema {
  query: Query
}

scalar JSONObject
scalar Timestamp

type Query {
  genesis: Genesis!
}

type Genesis {
  byron: ByronGenesis
  shelley: ShelleyGenesis
}

type ByronBlockVersionData {
  scriptVersion: Int!
  slotDuration: Int!
  maxBlockSize: Int!
  maxHeaderSize: Int!
  maxTxSize: Int!
  maxProposalSize: Int!
  mpcThd: String!
  heavyDelThd: String!
  updateVoteThd: String!
  updateProposalThd: String!
  updateImplicit: String!
  softforkRule: ByronSoftForkRule!
  txFeePolicy: ByronTxFeePolicy!
  unlockStakeEpoch: String!
}

type ByronGenesis {
  bootStakeholders: JSONObject!
  heavyDelegation: JSONObject!
  startTime: Timestamp!
  nonAvvmBalances: JSONObject!
  blockVersionData: ByronBlockVersionData!
  protocolConsts: ByronProtocolConsts!
  avvmDistr: JSONObject!
}

type ByronProtocolConsts {
  k: Int!
  protocolMagic: Int
}

type ByronSoftForkRule {
  initThd: String!
  minThd: String!
  thdDecrement: String!
}

type ByronTxFeePolicy {
  summand: String!
  multiplier: String!
}

type ShelleyGenesis {
  activeSlotsCoeff: Float!
  epochLength: Int!
  genDelegs: JSONObject
  initialFunds: JSONObject!
  maxKESEvolutions: Int!
  maxLovelaceSupply: String!
  networkId: String!
  networkMagic: Int!
  protocolParams: ShelleyProtocolParams!
  securityParam: Int!
  slotLength: Int!
  slotsPerKESPeriod: Int!
  staking: Staking
  systemStart: String!
  updateQuorum: Int!
}

type ShelleyProtocolParams {
  a0: Float!
  decentralisationParam: Int!
  eMax: Int!
  extraEntropy: ExtraEntropy!
  keyDeposit: Int!
  maxBlockBodySize: Int!
  maxBlockHeaderSize: Int!
  maxTxSize: Int!
  minFeeA: Int!
  minFeeB: Int!
  minPoolCost: Int!
  minUTxOValue: Int!
  nOpt: Int!
  poolDeposit: Int!
  protocolVersion: ProtocolVersion!
  rho: Float!
  tau: Float!
}

type ProtocolVersion {
  major: Int!
  minor: Int!
}

type ExtraEntropy {
  tag: String!
}

type Staking {
  pools: JSONObject!
  stake: JSONObject!
}
